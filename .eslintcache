[{"C:\\Users\\nagap\\Downloads\\TezAsia-main\\TezAsia-main\\src\\index.js":"1","C:\\Users\\nagap\\Downloads\\TezAsia-main\\TezAsia-main\\src\\App.js":"2","C:\\Users\\nagap\\Downloads\\TezAsia-main\\TezAsia-main\\src\\library\\connect.js":"3","C:\\Users\\nagap\\Downloads\\TezAsia-main\\TezAsia-main\\src\\library\\interact.js":"4"},{"size":219,"mtime":1667670945621,"results":"5","hashOfConfig":"6"},{"size":6860,"mtime":1667715532546,"results":"7","hashOfConfig":"6"},{"size":619,"mtime":1667670945707,"results":"8","hashOfConfig":"6"},{"size":1921,"mtime":1667671049737,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"mryad",{"filePath":"13","messages":"14","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\nagap\\Downloads\\TezAsia-main\\TezAsia-main\\src\\index.js",[],["21","22"],"C:\\Users\\nagap\\Downloads\\TezAsia-main\\TezAsia-main\\src\\App.js",["23","24","25","26","27","28","29","30","31"],"import \"./App.css\";\nimport * as config from \"./library/config.json\";\nimport React, { useEffect, useState } from \"react\";\nimport { add, getValue, multiply, update } from \"./library/interact\";\nimport { connectWalletBeacon, setup } from \"./library/connect\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nconst Styles = styled.div`\n background: lavender;\n padding: 20px;\n\n h1 {\n   border-bottom: 1px solid white;\n   color: #3d3d3d;\n   font-family: sans-serif;\n   font-size: 20px;\n   font-weight: 600;\n   line-height: 24px;\n   padding: 10px;\n   text-align: center;\n }\n\n form {\n   background: white;\n   border: 1px solid #dedede;\n   display: flex;\n   flex-direction: column;\n   justify-content: space-around;\n   margin: 0 auto;\n   max-width: 500px;\n   padding: 30px 50px;\n }\n\n input {\n   border: 1px solid #d9d9d9;\n   border-radius: 4px;\n   box-sizing: border-box;\n   padding: 10px;\n   width: 100%;\n }\n\n label {\n   color: #3d3d3d;\n   display: block;\n   font-family: sans-serif;\n   font-size: 14px;\n   font-weight: 500;\n   margin-bottom: 5px;\n }\n\n .error {\n   color: red;\n   font-family: sans-serif;\n   font-size: 12px;\n   height: 30px;\n }\n\n .submitButton {\n   background-color: #6976d9;\n   color: white;\n   font-family: sans-serif;\n   font-size: 14px;\n   margin: 20px 0px;\n`;\n const App = () => {\n  const [Tezos, setTezos] = useState(undefined);\n  const [status, setStatus] = useState(\"No Operations Performed\");\n  const [value, setValue] = useState(0);\n  const [loader, setLoader] = useState(true);\n  const { register, handleSubmit } = useForm();\n  useEffect(() => {\n    console.log(\"run\");\n    setup().then(setTezos).catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    if (Tezos === undefined) return;\n    getValue(Tezos)\n      .then(setValue)\n      .then(() => setLoader(false))\n      .catch(console.error);\n    const timer = setInterval(() => {\n      getValue(Tezos).then(setValue).catch(console.error);\n    }, 60000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [Tezos]);\n\n  const handleEvent = async (e, func, params) => {\n    e.preventDefault();\n    try {\n      const wal = await connectWalletBeacon();\n      Tezos.setWalletProvider(wal);\n      setLoader(true);\n      await func(Tezos, params, setStatus);\n      await getValue(Tezos)\n        .then(setValue)\n        .then(() => setLoader(false));\n    } catch (err) {\n      console.error(err);\n      alert(\"Couldn't connect wallet\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n     <h1>BlockChain Health Record Form</h1>\n      <Styles>\n      <form\n        onSubmit={async (e) => {\n          await handleEvent(e, update,\n        {\n          Complaint:e.target.Complaint.value,\n          Date1: e.target.Date1.value,\n          Dirps:e.target.Dirps.value,\n          DisPs: e.target.DisPs.value,\n          Doa:e.target.Doa.value,\n          Dow:e.target.Dow.value,\n          NoO: e.target.NoO.value,\n          PhoneNumber: e.target.PhoneNumber.value,\n          Section: e.target.Section.value,\n          address: e.target.address.value,\n          age: e.target.age.value,\n          fathersName: e.target.fathersName.value,\n          gender: e.target.gender.value,\n          name: e.target.name.value,\n          pop: e.target.pop.value,\n          time: e.target.time.value,\n          uid: e.target.uid.value,\n        }\n            );\n        }}\n      >\n        <label>Patient Name : </label>\n        <input type=\"text\" name=\"name\" step=\"1\" /><br></br>\n        <label>Doctor Name : </label>\n        <input type=\"text\" name=\"fathersName\" step=\"1\" /><br></br>\n        <label>Gender (gender): </label>\n        <input type=\"text\" name=\"gender\" step=\"1\" /><br></br>\n        <label>Health ID (uid): </label>\n        <input type=\"number\" name=\"uid\" step=\"1\" /><br></br>\n        <label> Age (age): </label>\n        <input type=\"number\" name=\"age\" step=\"1\" /><br></br>\n        <label>Phone (PhoneNumber): </label>\n        <input type=\"number\" name=\"PhoneNumber\" step=\"1\" /><br></br>\n        <label>Symptoms (DisPs): </label>\n        <input type=\"text\" name=\"DisPs\" step=\"1\" /><br></br>\n        <label>Hospital Name(Dirps): </label>\n        <input type=\"text\" name=\"Dirps\" step=\"1\" /><br></br>\n        <label>Address (address): </label>\n        <input type=\"text\" name=\"address\" step=\"1\" /><br></br>\n        <label>Date of Consultation(Date1): </label>\n        <input type=\"text\" name=\"Date1\" step=\"1\" /><br></br>\n        <label>Time of consultation(time): </label>\n        <input type=\"text\" name=\"time\" step=\"1\" /><br></br>\n        <label>Doctor's Note (No0): </label>\n        <input type=\"text\" name=\"NoO\" step=\"1\" /><br></br>\n        <label>Medicine prescribed (section): </label>\n        <input type=\"text\" name=\"Section\" step=\"1\" /><br></br>\n        <label>Report Results (pop): </label>\n        <input type=\"text\" name=\"pop\" step=\"1\" /><br></br>\n        <label>Treatment Procedure (Doa): </label>\n        <input type=\"text\" name=\"Doa\" step=\"1\" /><br></br>\n        <label>Tests conducted(Dow): </label>\n        <input type=\"text\" name=\"Dow\" step=\"1\" /><br></br>\n        <label>Remarks (Complaint): </label>\n        <input type=\"text\" name=\"Complaint\" step=\"1\" /><br></br>\n        <input type=\"submit\" value=\"submit\" />\n      </form>\n      </Styles>\n      {/* <form\n        onSubmit={async (e) => {\n          await handleEvent(e, multiply, e.target.mul.value);\n        }}\n      >\n        <label>Multiply : </label>\n        <input type=\"number\" name=\"mul\" step=\"1\" />\n        <input type=\"submit\" value=\"Multiply\" />\n      </form>\n      <form\n        onSubmit={async (e) => {\n          await handleEvent(e, add, {\n            a: e.target.a.value,\n            b: e.target.b.value,\n          });\n        }}\n      >\n        <label>Add : </label>\n        <input type=\"number\" name=\"a\" step=\"1\" />\n        <input type=\"number\" name=\"b\" step=\"1\" />\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n      <p dangerouslySetInnerHTML={{ __html: \"Tx Status : \" + status }}></p> */}\n    </div>\n  );\n};\n\nconst Loader = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      style={{\n        margin: \"auto\",\n        display: \"block\",\n        marginTop: \"3vw\",\n        marginBottom: \"-1vw\",\n      }}\n      width=\"3vw\"\n      height=\"3vw\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n    >\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        fill=\"none\"\n        stroke=\"#0a0a0a\"\n        strokeWidth=\"10\"\n        r=\"35\"\n        strokeDasharray=\"164.93361431346415 56.97787143782138\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n        ></animateTransform>\n      </circle>\n    </svg>\n  );\n};\n\nexport default App;","C:\\Users\\nagap\\Downloads\\TezAsia-main\\TezAsia-main\\src\\library\\connect.js",[],"C:\\Users\\nagap\\Downloads\\TezAsia-main\\TezAsia-main\\src\\library\\interact.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":2,"column":13,"nodeType":"40","messageId":"41","endLine":2,"endColumn":19},{"ruleId":"38","severity":1,"message":"42","line":4,"column":10,"nodeType":"40","messageId":"41","endLine":4,"endColumn":13},{"ruleId":"38","severity":1,"message":"43","line":4,"column":25,"nodeType":"40","messageId":"41","endLine":4,"endColumn":33},{"ruleId":"38","severity":1,"message":"44","line":67,"column":10,"nodeType":"40","messageId":"41","endLine":67,"endColumn":16},{"ruleId":"38","severity":1,"message":"45","line":68,"column":10,"nodeType":"40","messageId":"41","endLine":68,"endColumn":15},{"ruleId":"38","severity":1,"message":"46","line":69,"column":10,"nodeType":"40","messageId":"41","endLine":69,"endColumn":16},{"ruleId":"38","severity":1,"message":"47","line":70,"column":11,"nodeType":"40","messageId":"41","endLine":70,"endColumn":19},{"ruleId":"38","severity":1,"message":"48","line":70,"column":21,"nodeType":"40","messageId":"41","endLine":70,"endColumn":33},{"ruleId":"38","severity":1,"message":"49","line":200,"column":7,"nodeType":"40","messageId":"41","endLine":200,"endColumn":13},{"ruleId":"34","replacedBy":"50"},{"ruleId":"36","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","'add' is defined but never used.","'multiply' is defined but never used.","'status' is assigned a value but never used.","'value' is assigned a value but never used.","'loader' is assigned a value but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Loader' is assigned a value but never used.",["52"],["53"],"no-global-assign","no-unsafe-negation"]